@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Umbraco.Web

@{


    IEnumerable<IPublishedContent> selection = Umbraco.TypedContentAtRoot()
.First() //Root document
.Children() //Level 2 documents
.Where(x => x.DocumentTypeAlias == "projectsOverview")
.First() //Projects overview document
.Children() //Projects documents
.Where(x => x.HasValue("projectStatus") &&
Umbraco.GetPreValueAsString(
x.GetPropertyValue<int>("projectStatus")) == "Completed")
.Where(x => x.IsVisible()) // Only visible documents
.OrderByDescending(x => x.CreateDate).Take(3); // take 3 projects and order show newest projects first


}

@foreach (var menuItem in selection)
{
    var isProtected = umbraco.library.IsProtected(menuItem.Id, menuItem.Path);
    var loginAccess = umbraco.library.IsProtected(menuItem.Id, menuItem.Path)
    && umbraco.library.HasAccess(menuItem.Id, menuItem.Path);
    if (!isProtected || loginAccess)
    {
        <div class="d-inline-block">

            <a class="project-link" href="@menuItem.Url">
                @if (menuItem.HasValue("projectPicture"))
    {
        var mediaId = menuItem.GetPropertyValue("projectPicture").ToString();
            <img src="@Umbraco.TypedMedia(mediaId).Url" alt="" />
}
                <h5><br />@menuItem.Name</h5>
                <p>@Umbraco.Truncate(menuItem.GetPropertyValue<string>("projectDescription"), 45)</p>
            </a>

        </div>

    }
}

